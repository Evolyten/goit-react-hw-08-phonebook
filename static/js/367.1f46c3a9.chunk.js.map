{"version":3,"file":"static/js/367.1f46c3a9.chunk.js","mappings":"0MACA,EAAuB,4BAAvB,EAA2D,6BAA3D,EAAgG,6BAAhG,EAAyI,iC,gDCOnIA,EAAgB,CACpBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGNC,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CL,KAAMI,EAAAA,KACHE,SAAS,yBACTC,IAAI,EAAG,oCACPC,IAAI,GAAI,sCACRC,QACC,yHACA,0IAEJR,MAAOG,EAAAA,KACJE,SAAS,2BACTG,QACC,uDACA,qBAEJP,SAAUE,EAAAA,KAAaG,IAAI,EAAG,uBAuDhC,EApDyB,WACvB,IAAMG,GAAWC,EAAAA,EAAAA,MASjB,OACE,SAACC,EAAAA,QAAD,CAASC,MAAM,eAAf,UACE,SAAC,KAAD,CACEd,cAAeA,EACfe,SAXe,SAACC,EAAD,GAA0B,IAAjBC,EAAgB,EAAhBA,UAC5BC,QAAQC,IAAIH,GAEZL,GAASS,EAAAA,EAAAA,IAASJ,IAClBC,GACD,EAOKb,iBAAkBA,EAHpB,UAKE,UAAC,KAAD,CAAMiB,UAAWC,EAAjB,WACE,mBAAOD,UAAWC,EAAlB,kBAEE,SAAC,KAAD,CAAOD,UAAWC,EAAWC,KAAK,OAAOtB,KAAK,UAC9C,SAAC,KAAD,CAAcA,KAAK,aAErB,mBAAOoB,UAAWC,EAAlB,mBAEE,SAAC,KAAD,CACED,UAAWC,EACXC,KAAK,QACLtB,KAAK,QACLuB,aAAa,cAEf,SAAC,KAAD,CAAcvB,KAAK,cAErB,mBAAOoB,UAAWC,EAAlB,sBAEE,SAAC,KAAD,CACED,UAAWC,EACXC,KAAK,WACLtB,KAAK,WACLuB,aAAa,kBAEf,SAAC,KAAD,CAAcvB,KAAK,iBAErB,mBAAQoB,UAAWC,EAAeC,KAAK,SAAvC,gCAOT,C,mFChFYE,E,QAAcC,GAAAA,GAAH,sE,SCAjB,SAASb,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOa,EAAY,EAAZA,SAC/B,OACE,gCACE,SAACF,EAAD,UAAcX,IACba,IAGN,C","sources":["webpack://react-homework-template/./src/components/RegistrationForm/Registaration.module.css?f743","components/RegistrationForm/RegistrationFrom.jsx","components/Section/Sectiom.styled.js","components/Section/Section.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Registaration_form__DHZZk\",\"label\":\"Registaration_label__JeQ7-\",\"input\":\"Registaration_input__zJiiF\",\"btnSubmit\":\"Registaration_btnSubmit__wvFx-\"};","import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport css from './Registaration.module.css';\nimport { register } from 'redux/contactsOperation';\nimport { useDispatch } from 'react-redux';\nimport * as Yup from 'yup';\nimport { Section } from 'components/Section/Section';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .required('Please enter the name')\n    .min(3, 'Name must have more the 3 letter')\n    .max(30, 'Name must have less then 30 letter')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    ),\n  email: Yup.string()\n    .required('Please enter the number')\n    .matches(\n      /^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-.]+)\\.([a-zA-z]+)$/,\n      'Not correct email'\n    ),\n  password: Yup.string().min(6, 'Minimum 6 letters'),\n});\n\nconst RegistrationForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (user, { resetForm }) => {\n    console.log(user);\n\n    dispatch(register(user));\n    resetForm();\n  };\n\n  return (\n    <Section title=\"Registration\">\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={validationSchema}\n      >\n        <Form className={css.form}>\n          <label className={css.label}>\n            Name\n            <Field className={css.input} type=\"text\" name=\"name\" />\n            <ErrorMessage name=\"name\" />\n          </label>\n          <label className={css.label}>\n            Email\n            <Field\n              className={css.input}\n              type=\"email\"\n              name=\"email\"\n              autoComplete=\"username\"\n            />\n            <ErrorMessage name=\"email\" />\n          </label>\n          <label className={css.label}>\n            Password\n            <Field\n              className={css.input}\n              type=\"password\"\n              name=\"password\"\n              autoComplete=\"new-password\"\n            />\n            <ErrorMessage name=\"password\" />\n          </label>\n          <button className={css.btnSubmit} type=\"submit\">\n            Registration\n          </button>\n        </Form>\n      </Formik>\n    </Section>\n  );\n};\n\nexport default RegistrationForm;\n","import styled from 'styled-components';\n\nexport const SectionHead = styled.h2`\n  text-align: center;\n  margin: 0 0 30px 0;\n`;\n","import { PropTypes } from 'prop-types';\nimport { SectionHead } from './Sectiom.styled';\nexport function Section({ title, children }) {\n  return (\n    <section>\n      <SectionHead>{title}</SectionHead>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n"],"names":["initialValues","name","email","password","validationSchema","Yup","shape","required","min","max","matches","dispatch","useDispatch","Section","title","onSubmit","user","resetForm","console","log","register","className","css","type","autoComplete","SectionHead","styled","children"],"sourceRoot":""}