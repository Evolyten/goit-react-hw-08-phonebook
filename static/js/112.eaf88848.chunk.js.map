{"version":3,"file":"static/js/112.eaf88848.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactBook/ContactForm/ContactForm.module.css?147a","components/ContactBook/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactBook/ContactList/ContactList.module.css?9496","components/ContactBook/ContactListItem/ContactListItem.jsx","components/ContactBook/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/ContactBook/Filter/Filter.module.css?a6b8","components/ContactBook/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactBook/ContactBook.module.css?f30d","components/ContactBook/Loader/Loader.jsx","components/ContactBook/ContactBook.jsx","components/Section/Sectiom.styled.js","components/Section/Section.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__FKWTu\",\"label\":\"ContactForm_label__8k79j\",\"input\":\"ContactForm_input__snggU\",\"btnSubmit\":\"ContactForm_btnSubmit__jl+1x\"};","import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport toast from 'react-hot-toast';\nimport css from './ContactForm.module.css';\nimport { addContact } from 'redux/contactsOperation';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport { getContacts } from 'redux/contactsSelectors';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .required('Please enter the name')\n    .min(3, 'Name must have more the 3 letter')\n    .max(30, 'Name must have less then 30 letter')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    ),\n  number: Yup.string()\n    .required('Please enter the number')\n    .min(6, 'Number of phone must have more then 6 number')\n    .max(14, 'Number of phone must have less then 15 number')\n    .matches(\n      /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    ),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleSubmit = (user, { resetForm }) => {\n    if (contacts.some(contact => contact.name === user.name)) {\n      toast.error(`${user.name} is already in contacts`);\n      resetForm();\n      return;\n    }\n    dispatch(addContact(user));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={validationSchema}\n    >\n      <Form className={css.form}>\n        <label className={css.label}>\n          Name\n          <Field className={css.input} type=\"text\" name=\"name\" />\n          <ErrorMessage name=\"name\" />\n        </label>\n        <label className={css.label}>\n          Number\n          <Field className={css.input} type=\"tel\" name=\"number\" />\n          <ErrorMessage name=\"number\" />\n        </label>\n        <button className={css.btnSubmit} type=\"submit\">\n          add contact\n        </button>\n      </Form>\n    </Formik>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"user_list\":\"ContactList_user_list__5bXVQ\",\"user_item\":\"ContactList_user_item__eK9KA\",\"user_delete_btn\":\"ContactList_user_delete_btn__p-A7b\"};","import css from '../ContactList/ContactList.module.css';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contactsOperation';\n\nexport function ContactListItem({ user }) {\n  const dispatch = useDispatch();\n  const { id, name, number } = user;\n  return (\n    <li className={css.user_item}>\n      {name}: <span>{number}</span>\n      <button\n        className={css.user_delete_btn}\n        onClick={() => dispatch(deleteContact(id))}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactListItem.propTypes = {\n  user: PropTypes.object,\n};\n","import React from 'react';\nimport css from './ContactList.module.css';\nimport { useSelector } from 'react-redux';\nimport { ContactListItem } from 'components/ContactBook/ContactListItem/ContactListItem';\nimport { getContacts, getFilter } from 'redux/contactsSelectors';\n\nconst UserList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  function renderByFilter() {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n\n  return (\n    <ul className={css.user_list}>\n      {renderByFilter().map(contact => (\n        <ContactListItem key={contact.id} user={contact} />\n      ))}\n      {}\n    </ul>\n  );\n};\n\nexport default UserList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__HNnTn\"};","import React from 'react';\nimport css from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/contatsReducer';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  function onChangeFilter(e) {\n    let filterField = e.target.value;\n    dispatch(filterContacts(filterField));\n  }\n\n  return (\n    <input\n      className={css.filter}\n      type=\"text\"\n      name=\"filter\"\n      onChange={onChangeFilter}\n    />\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"contact_wrap\":\"ContactBook_contact_wrap__VK8-9\"};","import { InfinitySpin } from 'react-loader-spinner';\nimport styled from 'styled-components';\n\nconst LoaderWrap = styled.div`\n  text-align: center;\n`;\n\nexport default function Loader() {\n  return (\n    <LoaderWrap>\n      <InfinitySpin width=\"200\" color=\"#4fa94d\" />\n    </LoaderWrap>\n  );\n}\n","import React from 'react';\n\nimport { ContactForm } from './ContactForm/ContactForm';\nimport UserList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\nimport css from './ContactBook.module.css';\nimport { Section } from 'components/Section/Section';\nimport { Toaster } from 'react-hot-toast';\nimport { useSelector } from 'react-redux';\nimport { fetchContact } from 'redux/contactsOperation';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport Loader from './Loader/Loader';\nimport { getContacts, getIsLoading } from '../../redux/contactsSelectors';\nexport default function ContactBook() {\n  const contacts = useSelector(getContacts);\n  const isLoading = useSelector(getIsLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContact());\n  }, [dispatch]);\n  return (\n    <>\n      <div className={css.contact_wrap}>\n        <Section title=\"Phonebook\">\n          <ContactForm />\n        </Section>\n        <Section title=\"Contacts\">\n          <Filter />\n          {!!contacts.length && <UserList />}\n          {isLoading && <Loader />}\n        </Section>\n        <Toaster position=\"top-right\" reverseOrder={true} />\n      </div>\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const SectionHead = styled.h2`\n  text-align: center;\n  margin: 0 0 30px 0;\n`;\n","import { PropTypes } from 'prop-types';\nimport { SectionHead } from './Sectiom.styled';\nexport function Section({ title, children }) {\n  return (\n    <section>\n      <SectionHead>{title}</SectionHead>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n"],"names":["initialValues","name","number","validationSchema","Yup","shape","required","min","max","matches","ContactForm","dispatch","useDispatch","contacts","useSelector","getContacts","onSubmit","user","resetForm","some","contact","toast","addContact","className","css","type","ContactListItem","id","onClick","deleteContact","filter","getFilter","toLowerCase","includes","map","onChange","e","filterField","target","value","filterContacts","LoaderWrap","styled","Loader","width","color","ContactBook","isLoading","getIsLoading","useEffect","fetchContact","Section","title","length","position","reverseOrder","SectionHead","children"],"sourceRoot":""}