{"version":3,"file":"static/js/730.9aabe20f.chunk.js","mappings":"+QAkBMA,EAAgB,CACpBC,MAAO,GACPC,SAAU,IAGNC,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CJ,MAAOG,EAAAA,KACJE,SAAS,0BACTC,QACC,uDACA,qBAGJL,SAAUE,EAAAA,KACPE,SAAS,6BACTE,IAAI,EAAG,yCACPC,IAAI,GAAI,qDAiFb,UA9EkB,WAChB,IAAMC,GAAWC,EAAAA,EAAAA,MACTC,GAAcC,EAAAA,EAAAA,MAAdD,UAOR,OACE,SAAC,EAAAE,QAAD,CAASC,MAAM,cAAcC,MAAO,CAAEC,GAAI,QAASC,GAAI,SAAvD,UACE,SAAC,KAAD,CACElB,cAAeA,EACfmB,SATe,SAACC,EAAD,GAA0B,IAAjBC,EAAgB,EAAhBA,UAC5BX,GAASY,EAAAA,EAAAA,IAAMF,IACfC,GACD,EAOKlB,iBAAkBA,EAHpB,SAKG,gBAAGoB,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,OAAQC,EAAzB,EAAyBA,QAAzB,OACC,iBAAMN,SAAUI,EAAhB,UACE,UAAC,KAAD,CAAQG,QAAS,EAAGC,MAAM,aAA1B,WACE,UAAC,KAAD,CAAaC,YAAaJ,EAAOvB,OAASwB,EAAQxB,MAAlD,WACE,SAAC,KAAD,CAAW4B,QAAQ,WACnB,UAAC,KAAD,YACE,SAAC,KAAD,CACEC,cAAc,OACdC,UAAU,SAAC,KAAD,CAAWC,MAAM,gBAE7B,SAAC,KAAD,CACEC,GAAIC,EAAAA,GACJC,GAAG,QACHC,KAAK,QACLC,KAAK,QACLC,QAAQ,SACRC,aAAa,WACbC,YAAY,QACZC,GAAG,gBAIT,SAAC,KAAD,CAAcL,KAAK,WAEnB,UAAC,KAAD,CAAaR,YAAaJ,EAAOtB,UAAYuB,EAAQvB,SAArD,WACE,SAAC,KAAD,CAAW2B,QAAQ,cACnB,UAAC,KAAD,YACE,SAAC,KAAD,CACEC,cAAc,OACdC,UAAU,SAAC,KAAD,CAAYC,MAAM,gBAE9B,SAAC,KAAD,CACEC,GAAIC,EAAAA,GACJC,GAAG,WACHC,KAAK,WACLC,KAAK,WACLC,QAAQ,SACRC,aAAa,mBACbC,YAAY,WACZC,GAAG,aAGP,SAAC,KAAD,CAAcL,KAAK,iBAGrB,SAAC,KAAD,CACEC,KAAK,SACLK,YAAY,OACZ1B,MAAM,OACNgB,MAAM,OACNW,gBAA+B,SAAd/B,EAAuB,WAAa,WALvD,uBA7CL,KA4DR,C,oGC9GM,SAASE,EAAT,GAAwD,IAArCC,EAAoC,EAApCA,MAAoC,IAA7BC,MAAAA,OAA6B,MAArB,QAAqB,EAAZe,EAAY,EAAZA,SACxCnB,GAAcC,EAAAA,EAAAA,MAAdD,UAGR,OAFAgC,QAAQC,IAAIjC,IAGV,UAAC,KAAD,CACEqB,GAAG,MAGHa,QAAQ,MACRC,EAAG/B,EACHgC,EAAE,SACFC,GAAG,OACHC,UAAU,SACVlB,MAAqB,SAAdpB,EAAuB,WAAa,QAT7C,WAWE,SAAC,KAAD,CAASqB,GAAG,KAAKkB,GAAG,OAApB,SACGpC,IAEFgB,IAGN,C","sources":["components/LogInForm/LogInForm.jsx","components/Section/Section.jsx"],"sourcesContent":["import React from 'react';\nimport { Formik, Field, ErrorMessage } from 'formik';\nimport { logIn } from 'redux/auth/authOperation';\nimport { useDispatch } from 'react-redux';\nimport * as Yup from 'yup';\nimport { Section } from 'components/Section/Section';\nimport {\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  VStack,\n  InputLeftElement,\n  InputGroup,\n  useColorMode,\n} from '@chakra-ui/react';\nimport { UnlockIcon, EmailIcon } from '@chakra-ui/icons';\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string()\n    .required('Please enter the email')\n    .matches(\n      /^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-.]+)\\.([a-zA-z]+)$/,\n      'Not correct email'\n    ),\n\n  password: Yup.string()\n    .required('Please enter the password')\n    .min(7, 'Password must have more then 6 number')\n    .max(14, 'Password of phone must have less then 15 number'),\n});\n\nconst LogInForm = () => {\n  const dispatch = useDispatch();\n  const { colorMode } = useColorMode();\n\n  const handleSubmit = (user, { resetForm }) => {\n    dispatch(logIn(user));\n    resetForm();\n  };\n\n  return (\n    <Section title=\"Log In Form\" width={{ sm: '290px', md: '400px' }}>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={validationSchema}\n      >\n        {({ handleSubmit, errors, touched }) => (\n          <form onSubmit={handleSubmit}>\n            <VStack spacing={6} align=\"flex-start\">\n              <FormControl isInvalid={!!errors.email && touched.email}>\n                <FormLabel htmlFor=\"email\"></FormLabel>\n                <InputGroup>\n                  <InputLeftElement\n                    pointerEvents=\"none\"\n                    children={<EmailIcon color=\"gray.300\" />}\n                  />\n                  <Field\n                    as={Input}\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    variant=\"filled\"\n                    autoComplete=\"username\"\n                    placeholder=\"Email\"\n                    pl=\"40px\"\n                  />\n                </InputGroup>\n              </FormControl>\n              <ErrorMessage name=\"email\" />\n\n              <FormControl isInvalid={!!errors.password && touched.password}>\n                <FormLabel htmlFor=\"password\"></FormLabel>\n                <InputGroup>\n                  <InputLeftElement\n                    pointerEvents=\"none\"\n                    children={<UnlockIcon color=\"gray.300\" />}\n                  />\n                  <Field\n                    as={Input}\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    variant=\"filled\"\n                    autoComplete=\"current-password\"\n                    placeholder=\"Password\"\n                    pl=\"40px\"\n                  />\n                </InputGroup>\n                <ErrorMessage name=\"password\" />\n              </FormControl>\n\n              <Button\n                type=\"submit\"\n                colorScheme=\"blue\"\n                width=\"full\"\n                color=\"#fff\"\n                backgroundColor={colorMode === 'dark' ? 'blue.600' : 'blue.400'}\n              >\n                Login\n              </Button>\n            </VStack>\n          </form>\n        )}\n      </Formik>\n    </Section>\n  );\n};\n\nexport default LogInForm;\n","import { PropTypes } from 'prop-types';\nimport { Box, Heading, useColorMode } from '@chakra-ui/react';\n\nexport function Section({ title, width = '350px', children }) {\n  const { colorMode } = useColorMode();\n  console.log(colorMode);\n\n  return (\n    <Box\n      as=\"div\"\n      // bg={colorMode === 'dark' ? 'gray.50' : 'blue'}\n      // p=\"10px\"\n      rounded=\"4px\"\n      w={width}\n      m=\"0 auto\"\n      mt=\"50px\"\n      textAlign=\"center\"\n      color={colorMode === 'dark' ? 'gray.200' : 'black'}\n    >\n      <Heading as=\"h2\" mb=\"15px\">\n        {title}\n      </Heading>\n      {children}\n    </Box>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n"],"names":["initialValues","email","password","validationSchema","Yup","shape","required","matches","min","max","dispatch","useDispatch","colorMode","useColorMode","Section","title","width","sm","md","onSubmit","user","resetForm","logIn","handleSubmit","errors","touched","spacing","align","isInvalid","htmlFor","pointerEvents","children","color","as","Input","id","name","type","variant","autoComplete","placeholder","pl","colorScheme","backgroundColor","console","log","rounded","w","m","mt","textAlign","mb"],"sourceRoot":""}